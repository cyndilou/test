<Window x:Class="CustomComboBoxTest.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml" 
        xmlns:Converters="clr-namespace:GoogleCalendarReminder.Converters" 
        xmlns:CustomComboBoxTest="clr-namespace:CustomComboBoxTest" 
        xmlns:Controls="clr-namespace:Microsoft.Windows.Controls;assembly=WPFToolkit.Extended" 
        xmlns:sys="clr-namespace:System;assembly=mscorlib" 
        Title="MainWindow" 
        Name="MainWindowUC"
        Height="586" Width="525">
    <Window.Resources>
        <Converters:SnoozeConverter x:Key="SnoozeConverter" />
        <Converters:SnoozeEditableConverter x:Key="SnoozeEditableConverter" />
        <ControlTemplate x:Key="HiddenTextComboBox" TargetType="{x:Type ComboBox}">
            <Grid>
                <ToggleButton x:Name="DropDownToggle"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"  
                  Margin="-1" HorizontalContentAlignment="Right"
                  IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,
                              RelativeSource={RelativeSource TemplatedParent}}">
                    <!--<Path x:Name="BtnArrow" Height="4" Width="8" 
                    Stretch="Uniform" Margin="0,0,4,0"  Fill="Black"
                    Data="F1 M 300,-190L 310,-190L 305,-183L 301,-190 Z " />-->
                </ToggleButton>
                <ContentPresenter x:Name="ContentPresenter" Margin="6,2,25,2"
                  Content="{TemplateBinding SelectionBoxItem}"
                  ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                  ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}">
                </ContentPresenter>
                <TextBox x:Name="PART_EditableTextBox"
                  Style="{x:Null}"
                  Focusable="False"
                  Background="{TemplateBinding Background}"
                  HorizontalAlignment="Left" 
                  VerticalAlignment="Center" 
                  Margin="3,3,23,3"
                  Visibility="Hidden"
                  IsReadOnly="{TemplateBinding IsReadOnly}"/>
                <Popup x:Name="PART_Popup"
                  IsOpen="{TemplateBinding IsDropDownOpen}">
                    <Border x:Name="PopupBorder" 
                    HorizontalAlignment="Stretch" Height="Auto" 
                    MinWidth="{TemplateBinding ActualWidth}"
                    MaxHeight="{TemplateBinding MaxDropDownHeight}"
                    BorderThickness="{TemplateBinding BorderThickness}" 
                    BorderBrush="Black" Background="White" CornerRadius="3">
                        <ScrollViewer x:Name="ScrollViewer" BorderThickness="0" Padding="1">
                            <ItemsPresenter/>
                        </ScrollViewer>
                    </Border>
                </Popup>
            </Grid>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxToggleButton1"
                 TargetType="{x:Type ToggleButton}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition />
                    <ColumnDefinition Width="20" />
                </Grid.ColumnDefinitions>
                <VisualStateManager.VisualStateGroups>
                    <VisualStateGroup x:Name="CommonStates">
                        <VisualState x:Name="Normal" />
                        <VisualState x:Name="MouseOver">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ControlMouseOverColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Pressed" />
                        <VisualState x:Name="Disabled">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource DisabledControlDarkColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Shape.Fill).
                (SolidColorBrush.Color)"
                                          Storyboard.TargetName="Arrow">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource DisabledForegroundColor}" />
                                </ColorAnimationUsingKeyFrames>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Border.BorderBrush).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource DisabledBorderDarkColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                    </VisualStateGroup>
                    <VisualStateGroup x:Name="CheckStates">
                        <VisualState x:Name="Checked">
                            <Storyboard>
                                <ColorAnimationUsingKeyFrames Storyboard.TargetProperty="(Panel.Background).
                (GradientBrush.GradientStops)[1].(GradientStop.Color)"
                                          Storyboard.TargetName="Border">
                                    <EasingColorKeyFrame KeyTime="0"
                                   Value="{StaticResource ControlPressedColor}" />
                                </ColorAnimationUsingKeyFrames>
                            </Storyboard>
                        </VisualState>
                        <VisualState x:Name="Unchecked" />
                        <VisualState x:Name="Indeterminate" />
                    </VisualStateGroup>
                </VisualStateManager.VisualStateGroups>
                <Border x:Name="Border"
            Grid.ColumnSpan="2"
            CornerRadius="2"
            BorderThickness="1">
                    <Border.BorderBrush>
                        <LinearGradientBrush EndPoint="0,1"
                             StartPoint="0,0">
                            <GradientStop Color="{DynamicResource BorderLightColor}"
                        Offset="0" />
                            <GradientStop Color="{DynamicResource BorderDarkColor}"
                        Offset="1" />
                        </LinearGradientBrush>
                    </Border.BorderBrush>
                    <Border.Background>

                        <LinearGradientBrush StartPoint="0,0"
                             EndPoint="0,1">
                            <LinearGradientBrush.GradientStops>
                                <GradientStopCollection>
                                    <GradientStop Color="{DynamicResource ControlLightColor}" />
                                    <GradientStop Color="{DynamicResource ControlMediumColor}"
                            Offset="1.0" />
                                </GradientStopCollection>
                            </LinearGradientBrush.GradientStops>
                        </LinearGradientBrush>

                    </Border.Background>
                </Border>
                <Border Grid.Column="0"
            CornerRadius="2,0,0,2"
            Margin="1" >
                    <Border.Background>
                        <SolidColorBrush Color="{DynamicResource ControlLightColor}"/>
                    </Border.Background>
                </Border>
                <Path x:Name="Arrow"
          Grid.Column="1"
          HorizontalAlignment="Center"
          VerticalAlignment="Center"
          Data="M 0 0 L 4 4 L 8 0 Z" >
                    <Path.Fill>
                        <SolidColorBrush Color="{DynamicResource GlyphColor}"/>
                    </Path.Fill>
                </Path>
            </Grid>
        </ControlTemplate>
        
    </Window.Resources>
    <Grid>
        <StackPanel Margin="10">
            <StackPanel Orientation="Horizontal">
                <TextBlock Text="Event Time:" Margin="0,0,5,0" />
                <Controls:DateTimeUpDown Format="ShortTime" Value="{Binding TestEventTime}" Width="100"  Margin="0,0,50,0" />
                <TextBlock Text="Reminder Time:" Margin="0,0,5,0" />
                <TextBlock Text="{Binding ReminderTime}" />
            </StackPanel>
            
            <DockPanel DockPanel.Dock="Bottom">
                <Label Content="Click Snooze to be reminded again:" Margin="0,0,0,-8" DockPanel.Dock="Top" />
                <Button Content="Snooze" Padding="20,0" Margin="5" DockPanel.Dock="Right" IsDefault="True" Click="Button_Click" />
                <CustomComboBoxTest:SnoozeControl x:Name="SnoozeControl" 
                                                  VerticalAlignment="Center" 
                                                  DockPanel.Dock="Left"
                                                  EventTime="{Binding TestEventTime}"
                                                  SnoozeNumber="{Binding TestInt}" />
            </DockPanel>

            <ListView ItemsSource="{Binding TestItems}">
                <ListView.ItemContainerStyle >
                    <Style TargetType="ListViewItem">
                        <Style.Triggers>
                            <Trigger Property="ListViewItem.IsSelected" Value="True">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ListViewItem}">
                                            <CustomComboBoxTest:SelectedListItemControl />
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Trigger>
                        </Style.Triggers>
                        <!--<Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="{x:Type ListViewItem}">
                                    <Grid>
                                        <GridViewRowPresenter />
                                    </Grid>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>-->
                        <Setter Property="BorderBrush" Value="Yellow" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0, 0" EndPoint="0,1" Opacity=".3">
                                    <GradientStop Color="White" Offset="0" />
                                    <GradientStop Color="Yellow" Offset="1" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="250" DisplayMemberBinding="{Binding Property1}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Subject" HorizontalContentAlignment="Left"/>
                            </GridViewColumn.Header>
                        </GridViewColumn>
                        <GridViewColumn Width="150" DisplayMemberBinding="{Binding Property2}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Due in" HorizontalContentAlignment="Left"/>
                            </GridViewColumn.Header>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>

            <!--<ListView Name="CalendarEventList" Margin="5"
                      ItemsSource="{Binding TestItems}" >
                <ListView.ItemContainerStyle>
                    <Style TargetType="ListViewItem">
                        <Setter Property="BorderBrush" Value="Blue" />
                        <Setter Property="BorderThickness" Value="1" />
                        <Setter Property="Background">
                            <Setter.Value>
                                <LinearGradientBrush StartPoint="0, 0" EndPoint="0,1" Opacity=".3">
                                    <GradientStop Color="White" Offset="0" />
                                    <GradientStop Color="Blue" Offset="1" />
                                </LinearGradientBrush>
                            </Setter.Value>
                        </Setter>
                        <EventSetter Event="MouseDoubleClick" Handler="HandleDoubleClick" />
                    </Style>
                </ListView.ItemContainerStyle>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="250">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Subject" HorizontalContentAlignment="Left"/>
                            </GridViewColumn.Header>
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <CustomComboBoxTest:SelectedListItemControl />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="250" DisplayMemberBinding="{Binding Property1}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Subject" HorizontalContentAlignment="Left"/>
                            </GridViewColumn.Header>
                        </GridViewColumn>
                        <GridViewColumn Width="150" DisplayMemberBinding="{Binding Property2}">
                            <GridViewColumn.Header>
                                <GridViewColumnHeader Content="Due in" HorizontalContentAlignment="Left"/>
                            </GridViewColumn.Header>
                        </GridViewColumn>
                    </GridView>
                </ListView.View>
            </ListView>-->

            <!--<DockPanel HorizontalAlignment="Stretch">
                <TextBlock DockPanel.Dock="Left" Text="5 minutes" />
                <Button DockPanel.Dock="Right" Content="X" Width="15" />
            </DockPanel>-->
            
            <!--<ComboBox Name="SnoozeCombo" Margin="5" DockPanel.Dock="Left"
                          SelectedValue="{Binding SelectedValue}" 
                        ItemsSource="{Binding ValueCollection}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <DockPanel Width="300">
                            <TextBlock DockPanel.Dock="Left" Text="{Binding Converter={StaticResource SnoozeConverter}}" />
                            <Button DockPanel.Dock="Right" Content="X" />
                        </DockPanel>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>-->

            <!--<ComboBox Name="EditProfilesComboBox">
                <ComboBox.ItemsSource>
                    <CompositeCollection>
                        <CollectionContainer Collection="{Binding ValueCollection}" />
                        <ComboBoxItem Content="-5" />
                        <ComboBoxItem Content="-10" />
                        <ComboBoxItem Content="5" />
                        <ComboBoxItem Content="10" />
                        <ComboBoxItem Content="15" />
                        <ComboBoxItem Content="20" />
                        <ComboBoxItem Content="25" />
                        <ComboBoxItem Content="30" />
                        <ComboBoxItem Content="45" />
                        <ComboBoxItem Content="60" />
                        <Separator />
                        <Button Content="Edit Snooze Choices" HorizontalAlignment="Right" />
                    </CompositeCollection>
                </ComboBox.ItemsSource>
            </ComboBox>-->
            
            <!--<DockPanel DockPanel.Dock="Bottom" Margin="0,20,0,0" LastChildFill="True">
                <Button Content="Snooze" Padding="20,0" Margin="5" DockPanel.Dock="Right" IsDefault="True" />
                <CustomComboBoxTest:SnoozeControl VerticalAlignment="Center" DockPanel.Dock="Left" />
            </DockPanel>-->
            
            <!--<CustomComboBoxTest:SelectedListItemControl />-->

            <!--<ComboBox Name="SnoozeCombo1" Margin="5" DockPanel.Dock="Left"
                          SelectedItem="{Binding SelectedValue}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBox Text="{Binding}" />
                    </DataTemplate>
                </ComboBox.ItemTemplate>
                <ComboBoxItem Content="-5" />
                <ComboBoxItem Content="-10" />
                <ComboBoxItem Content="5" />
                <ComboBoxItem Content="10" />
                <ComboBoxItem Content="15" />
                <ComboBoxItem Content="20" />
                <ComboBoxItem Content="25" />
                <ComboBoxItem Content="30" />
                <ComboBoxItem Content="45" />
                <ComboBoxItem Content="60" />
            </ComboBox>-->

            <!--<ComboBox Name="EditProfilesComboBox">
                <ComboBox.ItemsSource>
                    <CompositeCollection>
                        <CollectionContainer Collection="{Binding ValueCollection}" />
                        <ComboBoxItem Content="-5" />
                        <ComboBoxItem Content="-10" />
                        <ComboBoxItem Content="5" />
                        <ComboBoxItem Content="10" />
                        <ComboBoxItem Content="15" />
                        <ComboBoxItem Content="20" />
                        <ComboBoxItem Content="25" />
                        <ComboBoxItem Content="30" />
                        <ComboBoxItem Content="45" />
                        <ComboBoxItem Content="60" />
                        <Separator />
                        <CustomComboBoxTest:SnoozeControl VerticalAlignment="Center" DockPanel.Dock="Left" />
                    </CompositeCollection>
                </ComboBox.ItemsSource>
            </ComboBox>-->
            
            <!--<DockPanel LastChildFill="True" Margin="5">
                <TextBlock Text="Snooze:" VerticalAlignment="Center" Margin="2,0" />
                <Controls:SplitButton Content="Snooze" DockPanel.Dock="Right" Margin="2,0">
                    <Controls:SplitButton.DropDownContent>
                        <ListBox>
                            <ListBoxItem Content="Before Meeting" />
                            <ListBoxItem Content="From Now" />
                        </ListBox>
                    </Controls:SplitButton.DropDownContent>
                </Controls:SplitButton>
                <ComboBox SelectedIndex="0"
                      Background="Transparent"
                      BorderThickness="0"
                      BorderBrush="Transparent"
                      Width="110"
                      DockPanel.Dock="Right">
                    <ComboBoxItem Content="before meeting" />
                    <ComboBoxItem Content="from now" />
                </ComboBox>
                <Controls:ButtonSpinner DockPanel.Dock="Right" Margin="2,0">
                    <Controls:MaskedTextBox Mask="00 minutes" />
                </Controls:ButtonSpinner>
                
            </DockPanel>-->

        </StackPanel>
        
    </Grid>
</Window>
